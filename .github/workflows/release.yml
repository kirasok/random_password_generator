name: Release

on:
  push:
    tags:
      - "v*.*.*"
    branches: ["master"]

  workflow_dispatch:

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: olegtarasov/get-tag@v2.1.2 # that generate $GIT_TAG_NAME env
        id: tagName
        with:
          tagRegex: 'v([0-9]+.[0-9]+.[0-9]+\+[0-9]+)' # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
          tagRegexGroup: 1 # Optional. Default is 1.
      - run: echo $GIT_TAG_NAME
      - name: Create version.txt with tagName
        run: echo $GIT_TAG_NAME > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  build:
    name: Build app
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get version.txt
        uses: actions/download-artifact@v3
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.0"
          channel: "stable"
          cache: true

      - name: get changelog bin
        run: dart pub global activate changelog_cli

      - name: generate changelog
        run: dart pub global run changelog_cli generate -P markdown -a > CHANGELOG.md

      - name: upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: CHANGELOG.md

      - name: Get dependencies
        run: flutter pub get

      - name: Start Android Release Build
        run: flutter build apk

      - name: Upload Android Release
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Start Linux Release Build
        run: flutter build linux

      - name: Zip Linux Release
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r linux-release.zip build/linux/x64/release/bundle

      - name: Upload Linux Release
        uses: actions/upload-artifact@v3
        with:
          name: linux-release
          path: linux-release.zip

  deploy:
    name: Deploy Android Build
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get Android Build from artifacts
        uses: actions/download-artifact@v3
        with:
          name: android-release
      - name: Get Linux Build from artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-release
      - name: Get changelog
        uses: actions/download-artifact@v3
        with:
          name: changelog
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "app-release.apk,linux-release.zip"
          bodyFile: "CHANGELOG.md"
